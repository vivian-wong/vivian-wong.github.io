<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vivian Wong</title>
    <description>Hi! I am a graduate student at Stanford University studying Civil Engineering. My interest lies in solving critical societal and urban problems with the help of computational methods such as digital simulation and AI.</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 04 Sep 2018 09:44:57 +0800</pubDate>
    <lastBuildDate>Tue, 04 Sep 2018 09:44:57 +0800</lastBuildDate>
    <generator>Jekyll v3.8.3</generator>
    
      <item>
        <title>How I Learned to Program</title>
        <description>&lt;p&gt;Right now I’m running a deep RL network on my laptop and have not much to do other than waiting for it to train itself. 
Therefore, I decided to take this time to write about the journey I took to learn to program. The journey is definitely still ongoing since 
I’m still learning more and more programming everyday in work and school, but before I forget, I would like to write it down and remind myself 
what I’ve gone through and how much I love it. This article probably relates to you more if you’re one of those people like me who’s (thinking of) starting 
to learn programming half-way through starting your non-CS major, and you start to wonder if you’re too late or you start to feel the impending hardship.&lt;/p&gt;

&lt;h3 id=&quot;first-programming-class-ever&quot;&gt;First Programming Class Ever&lt;/h3&gt;
&lt;p&gt;I know a lot of people started learning programming in high school, middle school or even elementary school (either self-taught or taking classes). 
Believe me, 2 days ago I heard my supervisor saying that there are classes now that teach kids how to program in grade 1. I didn’t quite realize 
what programming is until I took Introduction to Computing for Engineering and Science (CS101) in the second semester of my freshman year as a civil engineering major. That class 
was really a lot of fun. I learned Matlab at first and then C. I just loved the feeling of creating something that is kind of like a product, and 
when it finally runs, there is so much of a sense of accomplishment. I also loved writing and debugging logical statements, which made me feel like a puzzle solver. 
I know it sounds nerdy, but I regret not taking it sooner and going down the path of taking a computer science minor.&lt;/p&gt;

&lt;p&gt;My decision of not pursuing the minor was because taking CS125 (which is the first class of a CS minor) was kind of an inefficient way of taking classes. 
CS125 could replace CS101 in the Civil Engineering curriculum (I learned that after I finished CS101), but it doesn’t work the other way around. 
I wanted to finish all my required classes in 3 years so much that I felt like taking CS125 would be wasteful.&lt;/p&gt;

&lt;h3 id=&quot;research&quot;&gt;Research&lt;/h3&gt;
&lt;p&gt;My next moment of lots of coding came pretty soon. During my sophomore year, I worked in Prof. Spencer’s lab on a shake table (a table that shakes, duh!). 
I was coding on Matlab and LabVIEW to implement all kinds of software functions. And then there was also hardware connection problems with the table. 
I spent tons of time looking for which cable is supposed to connect to which port, and then back on the computer to code and test my functions. 
It was definitely difficult, but fun! Especially when I had a super nice mentor, Martha, who taught me how to do more advanced coding on Matlab 
(it was like some state space stuff that I later saw a bit in Structural Dynamics, and feedback control loops).&lt;/p&gt;

&lt;p&gt;As a bonus, I also went to a LabVIEW workshop to 
get certified as a LabVIEW Developer! I was quite pumped and knew I loved solving logical problems. But I was soon stepping into my 3rd year in college, 
which is also my last year according to my plan to finish college early. So when summer started, all of my mind was on preparing grad school applications. 
I wanted to get the top-tier schools, and so applying to programs that I had the most background in would be the safest. That of course led to almost 
all my applications being sent towards structural engineering programs. I had renowned recommenders in that field and decent grades in structures classes.&lt;/p&gt;

&lt;h3 id=&quot;more-classes&quot;&gt;More Classes&lt;/h3&gt;
&lt;p&gt;And then there was Stanford, with all the famous professors and world-class CS classes that I didn’t know before I came… It had a strong civil engineering department, 
of course, but soon I realized most of my peers were taking CS classes and the professor I wanted to work with also mentioned that taking CS classes would be beneficial 
for research. I kind of learned that too late, though. I ended up finishing off most structural engineering courses in the first 2 quarters, then 
took a class on Programming Abstractions (CS106B) and Intro to Deep Learning (CS230) in the Spring quarter.&lt;/p&gt;

&lt;p&gt;CS106B was super fun with a professor who was able to explain concepts very clearly and interesting yet slightly challenging assignments. Although 
this was a class meant for undergrads, I enjoyed it a lot and learned a ton. It really filled in a lot of gap for the limited level of object 
oriented programming that I had barely explored during my free time. On the other hand, CS230 was a bit too difficult with no machine learning 
background at all.&lt;/p&gt;

&lt;h3 id=&quot;internship&quot;&gt;Internship&lt;/h3&gt;
&lt;p&gt;Lastly, the part I want to end this article with is my internship this summer, which got me programming a deep reinforcement learning neural network 
hands-on in the real world. As you could imagine, for someone who struggled through CS230, this is quite a challenging task for me. But if you were 
to have one takeaway from this article, it is that nothing lets you learn faster than the real world. Implementing something from scratch 
all by myself made me clueless at first, but I learned a ton from all the readings and coding I had to do. I got to sit in the office 9 to 6 with not 
much to do other than focusing on my task. And with that, I finally felt that I was much more adept with programming, and was able to understand the 
underlying concepts of deep learning and reinforcement learning better.&lt;/p&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;You see, although I love to program, A LOT, I missed that earliest train in the morning that I should have hopped on. But if this is something 
that you really enjoy and truly want to learn (whether it’s for interest or for the money), it’s better to hop on the earliest train you could catch than 
to not take the initiative to learn at all. And just to emphasize it again - do some real life projects from the ground up. Don’t be scared of the nitty-gritty 
details you have to go over. You will have those days where you just have to sit down and read through other people’s confusing codes, or even the simplest 
tutorials could have things that you don’t necessarily get in your first time watching/reading it. But that is okay. Give it some time and I believe that 
if you look at them closely trying to understand them long enough, everything will come to light.&lt;/p&gt;

</description>
        <pubDate>Wed, 29 Aug 2018 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2018/08/how-i-learned-to-program/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/08/how-i-learned-to-program/</guid>
        
        <category>reflection</category>
        
        <category>work</category>
        
        
      </item>
    
      <item>
        <title>My Personal Site</title>
        <description>&lt;p&gt;I am building this website so that there could be one day when you look up “Vivian Wong” in a search engine looking for my information you would not find yourself more knowledgeable in Yu-Gi-Oh!
&lt;a href=&quot;http://yugioh.wikia.com/wiki/Vivian_Wong&quot;&gt;This&lt;/a&gt; is what appears 1st place in Google right now if you look up my name.&lt;/p&gt;
</description>
        <pubDate>Mon, 27 Aug 2018 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2018/08/my-personal-site/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/08/my-personal-site/</guid>
        
        <category>random</category>
        
        
      </item>
    
  </channel>
</rss>
